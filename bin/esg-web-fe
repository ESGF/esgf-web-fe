#!/bin/bash

#####
# ESGF Web Front End
# description: Web Front End To ESGF Search...
#
#****************************************************************************
#*                                                                          *
#*   Copyright (c) 2009, Lawrence Livermore National Security, LLC.         *
#*   Produced at the Lawrence Livermore National Laboratory                 *
#*   Written by: Gavin M. Bell (gavin@llnl.gov)                             *
#*   LLNL-CODE-420962                                                       *
#*                                                                          *
#*   All rights reserved. This file is part of the:                         *
#*   Earth System Grid Fed (ESGF) Node Software Stack, Version 1.0          *
#*                                                                          *
#*   For details, see http://esgf.org/                                      *
#*   Please also read this link                                             *
#*    http://esgf.org/LICENSE                                               *
#*                                                                          *
#*   * Redistribution and use in source and binary forms, with or           *
#*   without modification, are permitted provided that the following        *
#*   conditions are met:                                                    *
#*                                                                          *
#*   * Redistributions of source code must retain the above copyright       *
#*   notice, this list of conditions and the disclaimer below.              *
#*                                                                          *
#*   * Redistributions in binary form must reproduce the above copyright    *
#*   notice, this list of conditions and the disclaimer (as noted below)    *
#*   in the documentation and/or other materials provided with the          *
#*   distribution.                                                          *
#*                                                                          *
#*   Neither the name of the LLNS/LLNL nor the names of its contributors    *
#*   may be used to endorse or promote products derived from this           *
#*   software without specific prior written permission.                    *
#*                                                                          *
#*   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS    *
#*   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT      *
#*   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS      *
#*   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE    *
#*   LIVERMORE NATIONAL SECURITY, LLC, THE U.S. DEPARTMENT OF ENERGY OR     *
#*   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,           *
#*   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT       *
#*   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF       *
#*   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND    *
#*   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,     *
#*   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT     *
#*   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF     *
#*   SUCH DAMAGE.                                                           *
#*                                                                          *
#****************************************************************************
#####

#uses: perl, awk, ifconfig, tar, wget, curl, su, useradd, groupadd,
#      id, chmod, chown, chgrp, cut, svn, mkdir, killall, java, egrep,
#      lsof, unlink, ln, pax, keytool, openssl

#note: usage of readlink not macosx friendly :-( usage of useradd /
#      groupadd is RedHat/CentOS dependent :-(

DEBUG=${DEBUG:-0}
VERBOSE=${VERBOSE:-0}
envfile="/etc/esg.env"

esgf_web_fe_version=${esgf_web_fe_version:-"0.9.6"}

#--------------
#User Defined / Settable (public)
#--------------
install_prefix=${install_prefix:-"/usr/local"}
workdir=${workdir:-${installer_home:-"/usr/local/src/esgf"}/workbench/esg}
esg_root_dir=${esg_root_dir:-${ESGF_HOME:-"/esg"}}
esg_config_dir=${esg_root_dir}/config
install_manifest=${install_manifest:-"${esg_root_dir}/esgf-install-manifest"}
#--------------

date_format=${date_format:-"+%Y_%m_%d_%H%M%S"}
force_install=${force_install:-0}

tomcat_user=${tomcat_user:-tomcat}
tomcat_group=${tomcat_group:-$tomcat_user}
tomcat_install_dir=${CATALINA_HOME:-${install_prefix}/tomcat}

init() {
    [ -n "${envfile}" ] && [ -e "${envfile}" ] && source ${envfile} && ((VERBOSE)) && printf "web front-end: sourcing environment from: ${envfile} \n"

    web_fe_dist_url=${esg_dist_url}/esgf-web-fe/esgf-web-fe.war
    web_fe_context_root=esgf-web-fe
    web_fe_service_app_home=${tomcat_install_dir}/webapps/${web_fe_context_root}
    
}


#####
# Install The Web Front-End (fe)
#####
# - Takes boolean arg: 0 = setup / install mode (default)
#                      1 = updated mode
#
# In setup mode it is an idempotent install (default)
# In update mode it will always pull down latest after archiving old
#
setup_web_fe() {
    init

    echo -n "Checking for web front-end  ${esgf_web_fe_version}"
    check_webapp_version "${web_fe_context_root}" "${esgf_web_fe_version}"
    local ret=$?
    ((ret == 0)) && (( ! force_install )) && echo " [OK]" && return 0
        
    echo
    echo "*******************************"
    echo "Setting up The ESGF Web Front-End"
    echo "*******************************"
    echo

    local upgrade=${1:-0}

    local default="Y"
    ((force_install)) && default="N"
    local dosetup
    if [ -d ${web_fe_service_app_home} ]; then
        echo "Detected an existing web front-end installation..."
        read -p "Do you want to continue with web front-end installation and setup? $([ "$default" = "N" ] && echo "[y/N]" || echo "[Y/n]") " dosetup
        [ -z "${dosetup}" ] && dosetup=${default}
        if [ "${dosetup}" != "Y" ] && [ "${dosetup}" != "y" ]; then
            echo "Skipping web front-end installation and setup - will assume it's setup properly"
            return 0
        fi
        
        local dobackup="Y"
        read -p "Do you want to make a back up of the existing distribution?? [Y/n] " dobackup
        [ -z "${dobackup}" ] && dobackup=${default}
        if [ "${dobackup}" = "Y" ] || [ "${dobackup}" = "y" ]; then
            echo "Creating a backup archive of this web application $web_fe_service_app_home"
            backup ${web_fe_service_app_home}
        fi

        echo
    fi

    mkdir -p ${workdir}
    [ $? != 0 ] && return 1
    pushd ${workdir} >& /dev/null

    local web_fe_dist_file=$(pwd)/${web_fe_dist_url##*/}
    checked_get ${web_fe_dist_file} ${web_fe_dist_url} $((force_install))
    (( $? > 1 )) && echo " ERROR: Could not download ${node_dist_url} :-(" && popd >& /dev/null && checked_done 1
    
    stop_tomcat

    #----------------------------
    #make room for new install
    set_aside_web_app ${web_fe_service_app_home}

    mkdir -p ${web_fe_service_app_home}
    [ $? != 0 ] && echo "Could not create dir ${web_fe_service_app_home}" && popd >& /dev/null && checked_done 1
    cd ${web_fe_service_app_home}
    echo "Expanding war ${web_fe_dist_file} in $(pwd)"
    $JAVA_HOME/bin/jar xf ${web_fe_dist_file}
    set_aside_web_app_cleanup ${web_fe_service_app_home} $?

    chown -R ${tomcat_user} ${web_fe_service_app_home}
    chgrp -R ${tomcat_group} ${web_fe_service_app_home}

    popd >& /dev/null
    #----------------------------

    set_redirect ${web_fe_context_root}

    popd >& /dev/null

    #Set up the default content
    local target_properties_file=${esg_config_dir}/messages.properties

    if [ ! -e "${target_properties_file}" ] || ((force_install)) ; then
        [ -e "${target_properties_file}" ] && cp ${target_properties_file} ${target_properties_file}.bak        
        cp -v ${web_fe_service_app_home}/WEB-INF/classes/messages.properties ${esg_config_dir}
        sed -i 's#^[ ]*\(esgf.datanode.name=\).*$#\1'${node_short_name}'#'   ${target_properties_file} && echo -n ":" || echo -n "8"
        sed -i 's#^[ ]*\(esgf.homepage.institutionLogo=\).*$#\1'${institution_logo:-"/images/p2p_default_logo.png"}'#'   ${target_properties_file} && echo -n "-" || echo -n "."
        sed -i 's#^[ ]*\(esgf.homepage.about=\).*$#\1Please Enter Information about your organization here#' ${target_properties_file} && echo -n ")" || echo -n "("
    fi
    
    #always change the footer to match the current version
    [ -e "${target_properties_file}" ] && sed -i 's#^[ ]*\(esgf.footer.version=\).*$#\1'${script_version:1}'  [fe-'${esgf_web_fe_version}']#' ${target_properties_file} && echo -n "." || echo -n "x"

    write_web_fe_install_log
    post_web_fe_install
    checked_done 0

}

web_fe_startup_hook() {
    echo -n "Web-FE Startup Hook... "
    local target_properties_file=${esg_config_dir}/messages.properties
    #always change the footer to match the current version
    [ -e "${target_properties_file}" ] && sed -i 's#^[ ]*\(esgf.footer.version=\).*$#\1'${script_version:1}'  [fe-'${esgf_web_fe_version}']#' ${target_properties_file} && echo ":-)" || echo ":-("
}

post_web_fe_install() {
    echo -n "performing post install cleanup... "
    ([ -d "${tomcat_install_dir}/work" ] && rm -rf ${tomcat_install_dir}/work) && echo "[OK]" || echo "[FAIL]"
}

write_web_fe_install_log() {
    echo "$(date ${date_format}) webapp:${web_fe_context_root}=${esgf_web_fe_version} ${web_fe_service_app_home}" >> ${install_manifest}
    dedup ${install_manifest}
    write_as_property web_fe_service_endpoint http://${esgf_host}/${web_fe_context_root}/
    write_as_property web_fe_service_app_home
    return 0
}

clean_web_fe_webapp_subsystem() {
    init
    local doit="N"
    if [ -e ${web_fe_service_app_home} ]; then
        read -p "remove ESGF Search Front-End web service? (${web_fe_service_app_home}) [y/N]: " doit
        if [ "doit" = "Y" ] || [ "$doit" = "y" ]; then
            echo "removing ${web_fe_service_app_home}"
            if [ -n ${web_fe_service_app_home} ]; then
                rm -rf ${web_fe_service_app_home}
                [ $? != 0 ] && echo "ERROR: Unable to remove ${web_fe_service_app_home}" && return 1
                perl -n -i -e'print unless m!webapp:esgf-web-fe!' ${install_manifest}
            fi
        fi
    fi 
    if [ ! -e ${web_fe_service_app_home} ]; then
        debug_print "removing web-fe associated properties..."
        remove_property web_fe_service_endpoint
        remove_property web_fe_service_app_home
    fi
    return 0
}
